### Glue ETL Script

Creating a specific etl script to connect to the s3 bucket


import sys
from awsglue.transforms import *
from awsglue.utils import getResolvedOptions
from pyspark.context import SparkContext
from awsglue.context import GlueContext
from awsglue.job import Job

args = getResolvedOptions(sys.argv, ['JOB_NAME'])
sc = SparkContext()
glueContext = GlueContext(sc)
spark = glueContext.spark_session
job = Job(glueContext)
job.init(args['JOB_NAME'], args)

# Extract data from source
datasource0 = glueContext.create_dynamic_frame.from_catalog(database="my-database", table_name="my-table", transformation_ctx="datasource0")

# Transform data
applymapping1 = ApplyMapping.apply(frame=datasource0, mappings=[("column1", "string", "column1", "string"), ("column2", "int", "column2", "int")], transformation_ctx="applymapping1")

# Load data into Redshift
datasink2 = glueContext.write_dynamic_frame.from_jdbc_conf(frame=applymapping1, catalog_connection="my-redshift-connection", connection_options={"dbtable": "my_table", "database": "my_database"}, redshift_tmp_dir=args["TempDir"], transformation_ctx="datasink2")

job.commit()


